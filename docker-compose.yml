version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./backend/api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - user-service
      - product-service
      - inventory-service
      - order-service
      - payment-service
      - cart-service
      - notification-service
      - review-service
      - analytics-service

  # User Service
  user-service:
    build: ./backend/user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ecommerce_users
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - mysql

  # Product Service
  product-service:
    build: ./backend/product-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ecommerce_products
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - mysql

  # Inventory Service
  inventory-service:
    build: ./backend/inventory-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ecommerce_inventory
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - mysql

  # Order Service
  order-service:
    build: ./backend/order-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ecommerce_orders
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - mysql

  # Payment Service
  payment-service:
    build: ./backend/payment-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ecommerce_payments
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - mysql

  # Cart Service
  cart-service:
    build: ./backend/cart-service
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ecommerce_cart
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - mysql

  # Notification Service
  notification-service:
    build: ./backend/notification-service
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ecommerce_notifications
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - mysql

  # Review Service
  review-service:
    build: ./backend/review-service
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ecommerce_reviews
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - mysql

  # Analytics Service
  analytics-service:
    build: ./backend/analytics-service
    ports:
      - "8089:8089"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ecommerce_analytics
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      - mysql

  # MySQL Database
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=ecommerce
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password

  # Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "4200:4200"
    depends_on:
      - api-gateway

volumes:
  mysql_data: