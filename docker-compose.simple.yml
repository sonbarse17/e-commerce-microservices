version: '3.8'

services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: ecommerce-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=ecommerce
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # API Gateway (without security issues)
  api-gateway:
    build: 
      context: ./backend
      dockerfile: api-gateway/Dockerfile
    container_name: ecommerce-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_SECURITY_ENABLED=false
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  # User Service
  user-service:
    build:
      context: ./backend
      dockerfile: user-service/Dockerfile
    container_name: ecommerce-users
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_NAME=ecommerce_users
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  # Product Service
  product-service:
    build:
      context: ./backend
      dockerfile: product-service/Dockerfile
    container_name: ecommerce-products
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_NAME=ecommerce_products
      - DB_USERNAME=root
      - DB_PASSWORD=password
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  # Frontend
  frontend:
    build: ./frontend
    container_name: ecommerce-frontend
    ports:
      - "4200:4200"
    environment:
      - API_BASE_URL=http://localhost:8080/api
    depends_on:
      - api-gateway
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  default:
    name: ecommerce-network