# E-Commerce Microservices Environment Configuration

# Spring Profile
SPRING_PROFILES_ACTIVE=docker

# Database Configuration
DB_HOST=mysql
DB_PORT=3306
DB_USERNAME=root
DB_PASSWORD=password

# Individual Database Names
DB_NAME_USERS=ecommerce_users
DB_NAME_PRODUCTS=ecommerce_products
DB_NAME_INVENTORY=ecommerce_inventory
DB_NAME_ORDERS=ecommerce_orders
DB_NAME_PAYMENTS=ecommerce_payments
DB_NAME_CART=ecommerce_cart
DB_NAME_NOTIFICATIONS=ecommerce_notifications
DB_NAME_REVIEWS=ecommerce_reviews
DB_NAME_ANALYTICS=ecommerce_analytics

# MySQL Root Configuration
MYSQL_ROOT_PASSWORD=password
MYSQL_DATABASE=ecommerce

# Service Ports
API_GATEWAY_PORT=8080
USER_SERVICE_PORT=8081
PRODUCT_SERVICE_PORT=8082
INVENTORY_SERVICE_PORT=8083
ORDER_SERVICE_PORT=8084
PAYMENT_SERVICE_PORT=8085
CART_SERVICE_PORT=8086
NOTIFICATION_SERVICE_PORT=8087
REVIEW_SERVICE_PORT=8088
ANALYTICS_SERVICE_PORT=8089

# External Database Configuration (for AWS RDS)
RDS_ENDPOINT=your-rds-endpoint
RDS_USERNAME=admin
RDS_PASSWORD=your-secure-password

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379

# Frontend Configuration
FRONTEND_PORT=4200
API_BASE_URL=http://localhost:8080/api

# JWT Configuration
JWT_SECRET=your-jwt-secret-key-here
JWT_EXPIRATION=86400000

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:4200

# MySQL Database Port
MYSQL_PORT=3306

# Docker Network
DOCKER_NETWORK=ecommerce-network